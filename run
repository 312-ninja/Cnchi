#!/bin/bash

# WARNING:
# This script is a helper that the developers use to call Cnchi (testing purposes only)
# Please, do not use if your intention is to do a "normal" installation

CNCHI_DIR=`pwd`
_DEFAULT_DIR=/usr/share/cnchi
_PYTHON="/usr/bin/python"
_PYTHON_OPTIONS="-Wall"
_XML="/usr/share/cnchi/data/packages.xml"
_CNCHI_OPTIONS="-d -v --disable-rank-mirrors" #-s bugsnag"
_POLICY_FILE='com.antergos.pkexec.cnchi.policy'
_CNCHI_BIN="/usr/share/cnchi/bin/cnchi"

# If we aren't running on Arch make sure we use python3
[[ -f /etc/arch-release ]] || _PYTHON="/usr/bin/python3"

# Removes symlink and moves cnchi that was installed
# via pacman back to /usr/share/cnchi
cleanup() {
	if [[ -h "${_DEFAULT_DIR}" ]]; then
		sudo unlink "${_DEFAULT_DIR}"
		sudo mv "${_DEFAULT_DIR}.tmp" "${_DEFAULT_DIR}" > /dev/null 2>&1
	fi
	_pid=$(cat /tmp/cnchi.pid)
	echo ${_pid}
	sudo kill ${_pid}
}
# Make sure we cleanup upon exiting.
trap cleanup EXIT QUIT TERM

# If /usr/share/cnchi exists, is not a symlink, and is not the current directory then it was installed
# with pacman (so its not our development copy). Move it out of the way temporarily.
if [[ -d "${_DEFAULT_DIR}" && "${CNCHI_DIR}" != "${_DEFAULT_DIR}" && ! -h "${_DEFAULT_DIR}" ]]; then
	sudo mv "${_DEFAULT_DIR}" "${_DEFAULT_DIR}.tmp" > /dev/null 2>&1
elif [[ -h "${_DEFAULT_DIR}" ]]; then
	cleanup
fi

# Symlink our development copy to /usr/share/cnchi only if we weren't called from that directory
[[ "${CNCHI_DIR}" != "${_DEFAULT_DIR}" ]] && sudo ln -sf "${CNCHI_DIR}" "${_DEFAULT_DIR}"


# If our polkit policy file is not installed, install it and then restart polkit
[[ -f "/usr/share/polkit-1/actions/${_POLICY_FILE}" ]] || {
	sudo cp "dist/polkit-1/actions/${_POLICY_FILE}" /usr/share/polkit-1/actions && sudo systemctl restart polkit
}


if [[ -z "$1" ]]; then
	pkexec $_CNCHI_BIN $_CNCHI_OPTIONS -p $_XML ${@} 2>&1
else
	# Running through PyCharm Debugger
	pkexec $_PYTHON ${@} #2>&1
fi
